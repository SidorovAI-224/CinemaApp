@model IEnumerable<CinemaApp.BL.DTOs.MovieDTOs.Movie.MovieDTO>;
@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        .modal {
            display: none; 
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.7);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            max-width: 400px;
            text-align: center;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .close {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 20px;
            cursor: pointer;
        }

        .image-container {
            text-align: center;
            margin-top: 50px;
        }

        .image-wrapper {
            position: relative;
            display: inline-block;
            flex-direction: column;
            align-items: center;
            width: 200px; 
        }

        .badge-container {
            position: relative;
            top: 33px;
            left: 5px;
            display: flex;
            gap: 5px; 
        }

        .new-badge, .relevant-badge {
            padding: 5px 10px;
            font-size: 12px;
            font-weight: bold;
            border-radius: 5px;
            color: white;
        }

        .new-badge {
            width: 50px;
            background: green;
        }

        .relevant-badge {
            width: 88px;
            background: red;
        }

        button {
            background: gainsboro;
            color: black;
            font-size: 16px;
            font-weight: bold;
            padding: 8px 16px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: 0.2s ease-in-out;
        }

        button:hover {
            background: black;
            color: white;
        }

        button:active {
            transform: scale(0.95);
        }

        .image-container img {
            width: 200px;
            cursor: pointer;
            border-radius: 10px;
        }

        .image-wrapper h2 {
            margin-top: 8px; 
            font-size: 16px;
            text-align: center;
        }

        .modal-content iframe {
            width: 100%; 
            max-width: 420px; 
            height: 240px; 
            border: none;
        }
    </style>
</head>
<body>
    <button onclick="sortMovies('ReleaseDate')">Сортувати по даті виходу</button>
    <button onclick="sortMovies('Rating')">Сортувати по рейтингу</button>

    <div class="image-container">
        <div class="image-wrapper">
            <div id="movies-container">
                @foreach (var movie in Model)
                {
                    <div class="movie-item" data-release="@movie.ReleaseDate.ToString("yyyy-MM-dd")" data-rating="@movie.Rating">
                        <div class="badge-container">
                            @if (@movie.ReleaseDate >= DateTime.UtcNow.AddDays(-100))
                            {
                                <div class="new-badge">NEW</div>
                            }
                            @if (@movie.Rating == 5)
                            {
                                <div class="relevant-badge">RELEVANT</div>
                            }
                        </div>
                        <img src=@movie.PosterURL alt="Image @movie.MovieID" class="openModal" data-id="@movie.MovieID">
                        <h2>@movie.Title</h2>
                    </div>
                }
            </div>
        </div>
    </div>

    @foreach (var movie in Model)
    {
        <div id="modal-@movie.MovieID" class="modal">
            <div class="modal-content">
                <span class="close" data-id="@movie.MovieID">&times;</span>
                <h2>@movie.Title</h2>
                <iframe src=@movie.TrailerURL></iframe>
                <p>@movie.Description</p>
                <p>Тривалість – @movie.Duration.TotalMinutes.ToString("0") хв</p>
                <p>Дата виходу – @movie.ReleaseDate.ToString("dd.MM.yyyy")</p>
                <p>Рейтинг – @movie.Rating / 5</p>
                <p>Вікове обмеження – @movie.AgeLimit+</p>
            </div>
        </div>
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var images = document.querySelectorAll(".openModal");
            var modals = document.querySelectorAll(".modal");
            var closeButtons = document.querySelectorAll(".close");

            images.forEach(function (img) {
                img.addEventListener("click", function () {
                    var id = this.getAttribute("data-id");
                    document.getElementById("modal-" + id).style.display = "flex";
                });
            });

            closeButtons.forEach(function (btn) {
                btn.addEventListener("click", function () {
                    var id = this.getAttribute("data-id");
                    document.getElementById("modal-" + id).style.display = "none";
                });
            });

            window.addEventListener("click", function (event) {
                modals.forEach(function (modal) {
                    if (event.target === modal) {
                        modal.style.display = "none";
                    }
                });
            });
        });

        function sortMovies(criteria) {
            let container = document.getElementById("movies-container");
            let movies = Array.from(container.getElementsByClassName("movie-item"));

            movies.sort((a, b) => {
                let valueA, valueB;

                if (criteria === "ReleaseDate") {
                    valueA = new Date(a.getAttribute("data-release")).getTime(); 
                    valueB = new Date(b.getAttribute("data-release")).getTime();
                } else {
                    valueA = parseFloat(a.getAttribute("data-" + criteria));
                    valueB = parseFloat(b.getAttribute("data-" + criteria));
                }

                return valueB - valueA; 
            });

            movies.forEach(movie => container.appendChild(movie)); 
        }

    </script>

</body>
</html>

