@model IEnumerable<CinemaApp.BL.DTOs.MovieDTOs.Movie.MovieDTO>
@{
    ViewData["Title"] = "Absolute cinema";
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
    }

    .container {
        padding: 20px;
    }

    .search-container {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 20px;
    }

    .search-container input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
    }

    .search-container button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.2s ease-in-out;
    }

    .search-container button:hover {
        background-color: #0056b3;
    }

    .sort-container {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }

    .sort-container button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.2s ease-in-out;
    }

    .sort-container button:hover {
        background-color: #0056b3;
    }

    .movie-item {
        margin-bottom: 20px;
    }

    .card {
        position: relative;
        overflow: hidden;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease-in-out;
    }

    .card:hover {
        transform: scale(1.05);
    }

    .card-img-top {
        width: 100%;
        height: 250px;
        object-fit: cover;
    }

    .card-body {
        padding: 15px;
        text-align: center;
    }

    .card-title {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .card-text {
        font-size: 14px;
        color: #555;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
        transition: background-color 0.2s ease-in-out;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .relevant-badge {
        position: absolute;
        top: 10px;
        left: 10px;
        background-color: #28a745;
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 12px;
    }

    .new-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #17a2b8;
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 12px;
    }

    .no-films-message {
        text-align: center;
        margin-top: 20px;
        font-size: 18px;
        color: #555;
    }
</style>

<div class="container">
    <div class="search-container">
        <input type="text" id="searchInput" placeholder="Пошук...">
        <button id="searchButton">Search</button>
    </div>

    <div class="sort-container">
        <button onclick="sortMovies('ReleaseDate')">Sort by release</button>
        <button onclick="sortMovies('Rating')">Sort by rating</button>
    </div>

    @if (Model == null || !Model.Any())
    {
        <p class="no-films-message">No avaible films.</p>
    }
    else
    {
        <div class="row justify-content-center" id="movieContainer">
            @foreach (var movie in Model)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mb-4 movie-item" data-release="@movie.ReleaseDate.ToString("yyyy-MM-dd")" data-rating="@movie.Rating">
                    <div class="card text-center shadow-sm">
                        <div class="position-relative">
                            <img src="@movie.PosterURL" class="card-img-top" alt="Film poster">
                            @if (float.Parse(@movie.Rating) >= 8)
                            {
                                <div class="relevant-badge">Recommended</div>
                            }
                            @if (@movie.ReleaseDate >= DateTime.UtcNow.AddDays(-100))
                            {
                                <div class="new-badge">New</div>
                            }
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@movie.Title</h5>
                            <p class="card-text"><strong>Rating:</strong> @movie.Rating⭐</p>
                            <a asp-controller="Movie" asp-action="UserDetails" asp-route-id="@movie.MovieID" class="btn btn-primary btn-sm">Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<script>
    document.getElementById('searchButton').addEventListener('click', function () {
        const query = document.getElementById('searchInput').value.trim().toLowerCase();
        const movies = document.querySelectorAll('.movie-item');

        movies.forEach(movie => {
            const title = movie.querySelector('.card-title').textContent.toLowerCase();
            if (title.includes(query)) {
                movie.style.display = 'block';
            } else {
                movie.style.display = 'none';
            }
        });
    });

    function sortMovies(criteria) {
        const container = document.getElementById('movieContainer');
        const movies = Array.from(container.getElementsByClassName('movie-item'));

        movies.sort((a, b) => {
            let valueA, valueB;

            if (criteria === 'ReleaseDate') {
                valueA = new Date(a.getAttribute('data-release')).getTime();
                valueB = new Date(b.getAttribute('data-release')).getTime();
            } else {
                valueA = parseFloat(a.getAttribute('data-rating').replace(',', '.'));
                valueB = parseFloat(b.getAttribute('data-rating').replace(',', '.'));
            }

            return valueB - valueA; 
        });

        movies.forEach(movie => container.appendChild(movie));
    }

    document.getElementById('searchInput').addEventListener('keyup', function (event) {
        if (event.key === 'Enter') {
            document.getElementById('searchButton').click();
        }
    });
</script>