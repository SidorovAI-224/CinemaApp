@model CinemaApp.BL.DTOs.MovieDTOs.Movie.MovieDTO

@{
    ViewData["Title"] = Model.Title;
}

<div class="movie-details-container">
    <div class="movie-poster">
        <img src="@Model.PosterURL" alt="@Model.Title" class="poster-image" />
    </div>
    <div class="movie-info">
        <h1 class="movie-title">@Model.Title</h1>
        <p class="movie-description">@Model.Description MovieID</p>

        <div class="movie-metadata">
            <p>
                <strong>Genres:</strong>
                <span class="genre-tag">@Model.GenreName</span>
                @if (!string.IsNullOrEmpty(Model.GenreName1))
                {
                    <span class="genre-tag">@Model.GenreName1</span>    
                }
                @if (!string.IsNullOrEmpty(Model.GenreName2))
                {
                    <span class="genre-tag">@Model.GenreName2</span>
                }
                @if (!string.IsNullOrEmpty(Model.GenreName3))
                {
                    <span class="genre-tag">@Model.GenreName3</span>
                }
                @if (!string.IsNullOrEmpty(Model.GenreName4))
                {
                    <span class="genre-tag">@Model.GenreName4</span>
                }
            </p>
            <p><strong>Duration:</strong> @Model.Duration.ToString(@"hh\:mm")</p>
            <p><strong>Release date:</strong> @Model.ReleaseDate.ToShortDateString()</p>
            <p><strong>Rating:</strong> @Model.Rating</p>
            <p><strong>Age limit:</strong> @Model.AgeLimit+</p>
        </div>

        <h2>Crewmates and positions</h2>
        <table class="crewmate-table">
            <thead>
                <tr>
                    <th>Crewmate</th>
                    <th>Position</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var crewmate in Model.MovieCrewmates)
                {
                    <tr>
                        <td>@crewmate.CrewmateName</td>
                        <td>@crewmate.PositionName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="trailer-container" >
    <h2>Trailer</h2>
    <iframe width="200" height="150" src="@Model.TrailerURL.Replace("watch?v=", "embed/")" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div>

<div class="recommendations-container">
    <h2>Recommended Movies</h2>
    <ul id="recommendations-list"></ul>
</div>



<style>
    body {
        background-color: #0c486c;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: #333;
        margin: 0;
        padding: 0;
    }

    .movie-details-container {
        display: flex;
        gap: 30px;
        margin: 20px;
        padding: 20px;
        background-color: #fff;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        animation: fadeIn 1s ease-in-out;
    }

    .movie-poster {
        flex: 1;
        max-width: 400px;
    }

    .poster-image {
        width: 100%;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .poster-image:hover {
        transform: scale(1.05);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    }

    .movie-info {
        flex: 2;
    }

    .movie-title {
        font-size: 2.5rem;
        margin-bottom: 15px;
        color: #222;
        animation: slideInLeft 0.8s ease-in-out;
    }

    .movie-description {
        font-size: 1.1rem;
        line-height: 1.6;
        color: #555;
        margin-bottom: 20px;
        animation: fadeIn 1.2s ease-in-out;
    }

    .movie-metadata {
        margin-top: 20px;
    }

    .movie-metadata p {
        margin: 8px 0;
        font-size: 1rem;
        color: #444;
    }

    .genre-tag {
        display: inline-block;
        background-color: #0c486c;
        color: #fff;
        padding: 5px 10px;
        border-radius: 5px;
        margin-right: 5px;
        font-size: 0.9rem;
        transition: background-color 0.3s ease;
    }

    .genre-tag:hover {
        background-color: #0056b3;
    }

    .crewmate-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        animation: fadeIn 1.5s ease-in-out;
    }

    .crewmate-table th, .crewmate-table td {
        padding: 12px;
        border: 1px solid #ddd;
        text-align: left;
    }

    .crewmate-table th {
        background-color: #007bff;
        color: #fff;
    }

    .crewmate-table tr:hover {
        background-color: #f1f1f1;
    }

    .trailer-container {
        margin: 20px;
        padding: 20px;
        background-color: #fff;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        animation: fadeIn 1.8s ease-in-out;
    }

    .trailer-container h2 {
        margin-bottom: 15px;
        color: #222;
    }

    iframe {
        width: 100%;
        max-width: 800px;
        height: 450px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    iframe:hover {
        transform: scale(1.02);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    }

    .recommendations-container {
        margin: 20px;
        padding: 20px;
        background-color: #fff;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        animation: fadeIn 2s ease-in-out;
    }

    .recommendations-container h2 {
        margin-bottom: 15px;
        color: #222;
    }

    #recommendations-list {
        list-style: none;
        padding: 0;
    }

    #recommendations-list li {
        background-color: #007bff;
        color: #fff;
        padding: 10px;
        margin: 5px 0;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

    #recommendations-list li:hover {
        background-color: #0056b3;
    }

    /* Анімації */
    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    @@keyframes slideInLeft {
        from {
            transform: translateX(-50px);
            opacity: 0;
        }

        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let movieId = @Model.MovieID;
        fetch(`/api/ai/similar/${movieId}?maxResults=5`)
            .then(response => response.json())
            .then(data => {
                let list = document.getElementById("recommendations-list");
                list.innerHTML = "";
                data.forEach(movie => {
                    let li = document.createElement("li");
                    li.textContent = movie.title;
                    list.appendChild(li);
                });
            })
            .catch(error => console.error("Error fetching recommendations:", error));
    });
</script>