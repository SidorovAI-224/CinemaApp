@model CinemaApp.BL.DTOs.MovieDTOs.Movie.MovieDTO

@{
    ViewData["Title"] = Model.Title;
}

<div class="movie-details-container">
    <div class="movie-poster">
        <img src="@Model.PosterURL" alt="@Model.Title" class="poster-image" loading="lazy" />
        <div class="rating-badge">@Model.Rating</div>
    </div>
    <div class="movie-info">

        <h1 class="movie-title">@Model.Title; Movie ID: @Model.MovieID</h1>
        <a asp-action="Edit" asp-route-id="@Model.MovieID" class="btn admin-btn">Edit</a>

        <div class="movie-metadata">
            <div class="metadata-row">
                <p class="duration">
                    <i class="fa fa-clock-o" aria-hidden="true"></i>
                    @Model.Duration.ToString(@"hh\:mm")
                </p>
                <p class="release-date">
                    <i class="fa fa-calendar" aria-hidden="true"></i>
                    @Model.ReleaseDate.ToShortDateString()
                </p>
                <p class="age-limit">
                    <i class="fa fa-users" aria-hidden="true"></i>
                    @Model.AgeLimit+
                </p>
            </div>

            <div class="genres-container">
                <span class="genre-tag">@Model.GenreName</span>
                @if (!string.IsNullOrEmpty(Model.GenreName1))
                {
                    <span class="genre-tag">@Model.GenreName1</span>
                }
                @if (!string.IsNullOrEmpty(Model.GenreName2))
                {
                    <span class="genre-tag">@Model.GenreName2</span>
                }
                @if (!string.IsNullOrEmpty(Model.GenreName3))
                {
                    <span class="genre-tag">@Model.GenreName3</span>
                }
                @if (!string.IsNullOrEmpty(Model.GenreName4))
                {
                    <span class="genre-tag">@Model.GenreName4</span>
                }
            </div>
        </div>

        <p class="movie-description">@Model.Description</p>

        <div class="crew-section">
            <h2>Cast & Crew</h2>
            <div class="crew-list">
                @foreach (var crewmate in Model.MovieCrewmates)
                {
                    <div class="crew-item">
                        <span class="crew-position">@crewmate.PositionName</span>
                        <span class="crew-name">@crewmate.CrewmateName</span>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="tabs-container">
    <div class="tabs">
        <button class="tab-btn active" data-tab="trailer">Trailer</button>
        <button class="tab-btn" data-tab="recommendations">Similar Movies</button>
    </div>

    <div class="tab-content active" id="trailer">
        <div class="trailer-wrapper">
            <iframe width="400" height="300" src="@Model.TrailerURL.Replace("watch?v=", "embed/")" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen loading="lazy"></iframe>
        </div>
    </div>

    <div class="tab-content" id="recommendations">
        <div id="recommendations-loading">
            <div class="loading-spinner"></div>
            <p>Finding similar movies you might enjoy...</p>
        </div>
        <div id="recommendations-list" class="recommendations-grid"></div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>






<script>
    document.addEventListener("DOMContentLoaded", function () {
        gsap.registerPlugin(ScrollTrigger);

        gsap.from(".movie-poster", {
            duration: 1,
            x: -100,
            opacity: 0,
            ease: "power3.out"
        });

        gsap.from(".movie-info", {
            duration: 1,
            x: 100,
            opacity: 0,
            ease: "power3.out",
            delay: 0.3
        });

        gsap.from(".crew-item", {
            duration: 0.5,
            y: 30,
            opacity: 0,
            stagger: 0.1,
            ease: "power2.out",
            delay: 0.8
        });

        gsap.from(".tabs-container", {
            scrollTrigger: {
                trigger: ".tabs-container",
                start: "top 80%"
            },
            duration: 0.8,
            y: 50,
            opacity: 0,
            ease: "power2.out"
        });

        const tabBtns = document.querySelectorAll('.tab-btn');
        const tabContents = document.querySelectorAll('.tab-content');

        tabBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                const tab = btn.dataset.tab;

                tabBtns.forEach(b => b.classList.remove('active'));
                tabContents.forEach(c => c.classList.remove('active'));

                btn.classList.add('active');
                document.getElementById(tab).classList.add('active');
            });
        });

        const recommendationsList = document.getElementById("recommendations-list");
        const loadingIndicator = document.getElementById("recommendations-loading");
        const movieId = @Model.MovieID;

        async function pollRecommendations() {
            try {
                const response = await fetch(`/api/ai/similar/${movieId}?maxResults=5`);
                if (response.status === 202) {
                    console.log("Recommendations still processing, trying again in 2 seconds");
                    setTimeout(pollRecommendations, 2000);
                    return;
                }
                if (!response.ok) {
                    throw new Error('Error: ' + response.status);
                }
                const data = await response.json();

                if (loadingIndicator) {
                    gsap.to(loadingIndicator, {
                        duration: 0.5,
                        opacity: 0,
                        onComplete: () => {
                            loadingIndicator.style.display = "none";
                        }
                    });
                }

                recommendationsList.innerHTML = "";

                data.forEach((movie, index) => {
                    const movieCard = document.createElement("div");
                    movieCard.className = "movie-card";

                    movieCard.innerHTML = `
                        <a href="/Movie/UserDetails/${movie.movieId}" class="recommendation-link">
                            <div class="poster-wrapper">
                                <img src="${movie.posterUrl}" alt="${movie.title}" class="recommendation-poster" loading="lazy" />
                                <div class="hover-info">
                                    <span>View details</span>
                                </div>
                            </div>
                            <h3 class="movie-title">${movie.title}</h3>
                        </a>
                    `;
                    recommendationsList.appendChild(movieCard);

                    gsap.from(movieCard, {
                        duration: 0.5,
                        y: 50,
                        opacity: 0,
                        delay: index * 0.1,
                        ease: "power2.out"
                    });
                });

                recommendationsList.style.display = "grid";

            } catch (error) {
                console.error("Error fetching recommendations:", error);
                if (loadingIndicator) {
                    loadingIndicator.innerHTML = `
                        <div class="error-message">
                            <i class="fas fa-exclamation-circle error-icon"></i>
                            <p>Couldn't load recommendations. Please try again later.</p>
                            <button class="retry-btn" onclick="pollRecommendations()">Try Again</button>
                        </div>
                    `;
                }
            }
        }

        if (document.querySelector('[data-tab="recommendations"]').classList.contains('active')) {
            pollRecommendations();
        } else {
            document.querySelector('[data-tab="recommendations"]').addEventListener('click', function() {
                if (recommendationsList.children.length === 0) {
                    pollRecommendations();
                }
            });
        }
    });
</script>

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap');
    @@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css');

    :root {
        --primary-color: #0c486c;
        --secondary-color: #34495e;
        --accent-color: #e74c3c;
        --text-light: #f5f5f5;
        --text-dark: #2c3e50;
        --bg-dark: #1a1a2e;
        --bg-light: #ffffff;
        --shadow-soft: 0 10px 30px rgba(0, 0, 0, 0.05);
        --shadow-strong: 0 15px 35px rgba(0, 0, 0, 0.2);
        --transition-fast: 0.3s ease;
        --transition-smooth: 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    body {
        background-color: var(#1a1a2e);
        font-family: 'Montserrat', sans-serif;
        color: #2c3e50;
        margin: 0;
        padding: 0;
        line-height: 1.6;
    }

    .movie-details-container {
        display: flex;
        gap: 40px;
        margin: 40px auto;
        padding: 30px;
        max-width: 1200px;
        background-color: #ffffff;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        position: relative;
        overflow: hidden;
    }

    .movie-details-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(to right, rgba(12, 72, 108, 0.05), transparent);
        pointer-events: none;
    }

    .movie-poster {
        flex: 1;
        max-width: 350px;
        position: relative;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
    }

    .poster-image {
        width: 100%;
        height: auto;
        border-radius: 15px;
        transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    .movie-poster:hover .poster-image {
        transform: scale(1.05);
    }

    .rating-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        background-color: #e74c3c;
        color: #f5f5f5;
        padding: 8px 15px;
        border-radius: 30px;
        font-weight: 600;
        font-size: 1.1rem;
        box-shadow: 0 4px 10px rgba(231, 76, 60, 0.3);
        backdrop-filter: blur(5px);
    }

    .movie-info {
        flex: 2;
        display: flex;
        flex-direction: column;
    }



    .movie-title {
        font-size: 2.8rem;
        margin-bottom: 20px;
        color: #0c486c;
        font-weight: 700;
        text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);
        position: relative;
    }

    .movie-title::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 0;
        width: 80px;
        height: 4px;
        background: linear-gradient(90deg, #0c486c, transparent);
        border-radius: 2px;
    }

    .movie-metadata {
        margin-bottom: 30px;
    }

    .metadata-row {
        display: flex;
        gap: 25px;
        margin-bottom: 20px;
    }

    .metadata-row p {
        margin: 0;
        display: flex;
        align-items: center;
        font-size: 1rem;
        color: #34495e;
    }

    .metadata-row i {
        margin-right: 8px;
        color: #0c486c;
    }

    .genres-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .genre-tag {
        background: linear-gradient(135deg, #0c486c, #34495e);
        color: #f5f5f5;
        padding: 8px 15px;
        border-radius: 30px;
        font-size: 0.9rem;
        font-weight: 500;
        box-shadow: 0 2px 10px rgba(12, 72, 108, 0.2);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .genre-tag:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(12, 72, 108, 0.3);
    }

    .movie-description {
        font-size: 1.1rem;
        line-height: 1.7;
        color: #1a1a2e;
        margin-bottom: 30px;
        position: relative;
        padding-bottom: 20px;
    }

    .movie-description::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 1px;
        background: linear-gradient(90deg, rgba(12, 72, 108, 0.2), transparent);
    }

    .crew-section {
        margin-top: 20px;
    }

    .crew-section h2 {
        font-size: 1.8rem;
        margin-bottom: 20px;
        color: #0c486c;
        font-weight: 600;
    }

    .crew-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 15px;
    }

    .crew-item {
        padding: 15px;
        background-color: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        display: flex;
        flex-direction: column;
    }

    .crew-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
    }

    .crew-position {
        font-size: 0.9rem;
        color: #34495e;
        font-weight: 600;
        margin-bottom: 5px;
    }

    .crew-name {
        font-size: 1.1rem;
        color: #2c3e50;
    }

    .tabs-container {
        max-width: 1200px;
        margin: 40px auto;
        background-color: #ffffff;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
    }

    .tabs {
        display: flex;
        background: linear-gradient(to right, #0c486c, #34495e);
        padding: 0;
        position: relative;
    }

    .tab-btn {
        flex: 1;
        padding: 20px;
        background: transparent;
        border: none;
        color: rgba(255, 255, 255, 0.7);
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: color 0.3s ease;
        position: relative;
        z-index: 1;
    }

    .tab-btn.active {
        color: #ffffff;
    }

    .tab-btn::before {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%) scaleX(0);
        width: 60%;
        height: 3px;
        background-color: #e74c3c;
        transition: transform 0.3s ease;
        z-index: 2;
    }

    .tab-btn.active::before {
        transform: translateX(-50%) scaleX(1);
    }

    .tab-content {
        display: none;
        padding: 30px;
    }


    .tab-content.active {
        display: block;
        animation: fadeIn 0.5s ease forwards;
    }
    
    .trailer-wrapper {
        width: 100%;
        max-width: 900px;
        margin: 0 auto;
        aspect-ratio: 16/9;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
    }

    iframe {
        width: 100%;
        height: 100%;
        border: none;
    }

    #recommendations-loading {
        text-align: center;
        padding: 50px 0;
    }

    .loading-spinner {
        border: 4px solid rgba(12, 72, 108, 0.1);
        border-radius: 50%;
        border-top: 4px solid var(#0c486c);
        width: 50px;
        height: 50px;
        margin: 0 auto 20px;
        animation: spin 1s linear infinite;
    }

    .recommendations-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 30px;
        padding: 20px 0;
    }

    .movie-card {
        background-color: #f9f9f9;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94), box-shadow 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    .movie-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
    }

    .recommendation-link {
        text-decoration: none;
        color: inherit;
        display: block;
    }

    .poster-wrapper {
        position: relative;
        overflow: hidden;
        aspect-ratio: 2/3;
    }

    .recommendation-poster {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    .movie-card:hover .recommendation-poster {
        transform: scale(1.1);
    }

    .hover-info {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(to top, rgba(0,0,0,0.9), transparent);
        padding: 20px 10px;
        transform: translateY(100%);
        transition: transform 0.3s ease;
        text-align: center;
    }

    .hover-info span {
        color: white;
        font-weight: 500;
        font-size: 0.95rem;
        display: inline-block;
        padding: 8px 15px;
        background-color: rgba(231, 76, 60, 0.8);
        border-radius: 30px;
        backdrop-filter: blur(5px);
    }

    .movie-card:hover .hover-info {
        transform: translateY(0);
    }

    .movie-card h3 {
        padding: 15px;
        margin: 0;
        font-size: 1rem;
        text-align: center;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .error-message {
        padding: 30px;
        background-color: #fff3f3;
        border-radius: 15px;
        text-align: center;
        border: 1px solid #ffcccb;
        animation: fadeIn 0.5s ease;
    }

    .error-icon {
        font-size: 2rem;
        color: #e74c3c;
        margin-bottom: 15px;
    }

    .retry-btn {
        margin-top: 20px;
        padding: 10px 20px;
        background-color: #0c486c;
        color: white;
        border: none;
        border-radius: 30px;
        cursor: pointer;
        font-weight: 500;
        transition: background-color 0.3s ease;
    }

    .retry-btn:hover {
        background-color: #34495e;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    @@media (max-width: 992px) {
        .movie-details-container {
            flex-direction: column;
            align-items: center;
            padding: 20px;
        }

        .movie-poster {
            max-width: 300px;
            margin-bottom: 30px;
        }


        .crew-list {
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        }
    }

    @@media (max-width: 768px) {
        .movie-title {
            font-size: 2.2rem;
        }

        .metadata-row {
            flex-wrap: wrap;
            gap: 15px;
        }

        .recommendations-grid {
            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
            gap: 20px;
        }

        .tabs {
            flex-direction: column;
        }

        .tab-btn {
            padding: 15px;
        }

        .tab-content {
            padding: 20px;
        }
    }
</style>